datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id    Int     @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime @updatedAt
  name  String?
  email String  @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?

  categories Category[]
}

model Category {
  id    Int     @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  title       String  @unique
  tasks   Task[]

  userId  Int
  user User @relation(fields: [userId], references: [id])
}

model Task {
  id    Int     @id @default(autoincrement())
  createdAt  DateTime?  @default(now())
  updatedAt  DateTime? @updatedAt
  title     String
  color     String
  // description String?
  repeats     Repeat[]
  records   Record[]

  categoryId Int
  category  Category  @relation(fields: [categoryId], references: [id])
}

model Record {
  id    Int     @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime @updatedAt
  start     DateTime
  end     DateTime

  taskId  Int
  task  Task  @relation(fields: [taskId], references: [id])
}

enum RepeatType {
  Daily
  Weekly
  Monthly
  Yearly
}

enum WeekOfMonth {
  First
  Second
  Third
  Fourth
  Fifth
  Last
}

enum DayOfWeek {
  Sun @map("0")
  Mon @map("1")
  Tue @map("2")
  Wed @map("3")
  Thu @map("4")
  Fri @map("5")
  Sat @map("6")
}

model Repeat {
  id    Int     @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime @updatedAt
  startDate DateTime  @default(now())
  endDate DateTime?
  times    Json?    @default("[]") // [시작시간, 종료시간][] format: hh:mm (24hours)
  type  RepeatType?
  interval  Int?
  daysOfWeek DayOfWeek[]
  daysOfMonth String[] // 1 ~30 or 31 to string
  weekOfMonth WeekOfMonth?

  taskId  Int
  task  Task @relation(fields: [taskId], references: [id])
}